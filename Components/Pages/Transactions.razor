@using System.Globalization;
@using Microsoft.EntityFrameworkCore
@using BlazorAppAttempt.Models
@inject IDbContextFactory<BlazorAppAttempt.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<div class="transaction-section">
    <hr />
    <h4>Transactions</h4>
    <div class="col-md-6">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Type</th>
                    <th>Amount</th>
                    <th>Description</th>
                    <th>Date Created</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in transactions)
                {
                    <tr>
                        <td>@transaction.Type</td>
                        <td>@transaction.Amount.ToString("C", crCulture)</td>
                        <td>@transaction.Description</td>
                        <td>@transaction.DateCreated.ToShortDateString()</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="col-md-6">
            <h3>Add Transaction</h3>
            <EditForm Model="NewTransaction" OnValidSubmit="AddTransaction">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" />

                <div class="mb-3">
                    <label for="amount" class="form-label">Amount:</label>
                    <InputNumber id="amount" @bind-Value="NewTransaction.Amount" class="form-control" />
                    <ValidationMessage For="() => NewTransaction.Amount" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description:</label>
                    <InputText id="description" @bind-Value="NewTransaction.Description" class="form-control" />
                    <ValidationMessage For="() => NewTransaction.Description" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="type" class="form-label">Type:</label>
                    <InputSelect id="type" @bind-Value="NewTransaction.Type" class="form-control">
                        <option value="Credit">Credit</option>
                        <option value="Debit">Debit</option>
                    </InputSelect>
                    <ValidationMessage For="() => NewTransaction.Type" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Add Transaction</button>
            </EditForm>
        </div>

    </div>


</div>

@code {

    [Parameter]
    public int ContractID { get; set; }

    private List<Transaction> transactions { get; set; } = new();
    private Transaction NewTransaction { get; set; } = new();
    CultureInfo crCulture = new CultureInfo("es-CR"); // Costa Rica culture

    private Contract contract;

    private void AddTransaction()
    {
        using var context = DbFactory.CreateDbContext();
        NewTransaction.TransactionID = 0;
        NewTransaction.DateCreated = DateTime.Now;
        NewTransaction.ContractID = ContractID;
        contract.Transactions.Add(NewTransaction);
        context.Transactions.Add(NewTransaction);
        context.SaveChanges();
        LoadTransactions();
    }

    private void LoadTransactions()
    {
        using var context = DbFactory.CreateDbContext();
        transactions = context.Transactions
            .Where(t => t.ContractID == ContractID)
            .ToList();
    }
}
